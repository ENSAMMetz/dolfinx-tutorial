# This is a basic workflow to help you get started with Actions
name: Test, build and publish

# Controls when the action will run.
on:
  push:
    branches: ["**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Weekly build on Mondays at 8 am
  schedule:
    - cron: "0 8 * * 1"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: ghcr.io/jorgensd/dolfinx-tutorial:v0.5.1

    env:
      HDF5_MPI: "ON"
      CC: mpicc
      HDF5_DIR: "/usr/local/"
      DISPLAY: ":99.0"
      PYVISTA_OFF_SCREEN: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Test complex notebooks in parallel
        run: |
          export PKG_CONFIG_PATH=/usr/local/dolfinx-complex/lib/pkgconfig:$PKG_CONFIG_PATH
          export PETSC_ARCH=linux-gnu-complex-32
          export PYTHONPATH=/usr/local/dolfinx-complex/lib/python3.10/dist-packages:$PYTHONPATH
          export LD_LIBRARY_PATH=/usr/local/dolfinx-complex/lib:$LD_LIBRARY_PATH
          pip3 uninstall pyvista -y
          pip3 install pyvista --upgrade
          python3 -c "from pyvista import start_xvfb; start_xvfb(0.1)"
          cd chapter1
          mpirun -n 2 python3 complex_mode.py
 

      - name: Install dependencies
        run: pip3 install notebook nbconvert jupyter-book nbconvert==6.5.3 --upgrade
      - name: Test notebooks in parallel
        run: |
          python3 -c "from pyvista import start_xvfb; start_xvfb(0.1)"
          cd chapter1
          mpirun -n 2 python3 fundamentals_code.py
          mpirun -n 2 python3 membrane_code.py
          cd ../chapter2
          mpirun -n 2 python3 diffusion_code.py
          mpirun -n 2 python3 heat_code.py
          mpirun -n 2 python3 linearelasticity_code.py
          mpirun -n 2 python3 hyperelasticity.py
          mpirun -n 2 python3 nonlinpoisson_code.py
          mpirun -n 2 python3 ns_code1.py
          mpirun -n 2 python3 ns_code2.py
          cd ../chapter3
          mpirun -n 3 python3 neumann_dirichlet_code.py
          mpirun -n 3 python3 multiple_dirichlet.py
          mpirun -n 3 python3 subdomains.py
          mpirun -n 3 python3 robin_neumann_dirichlet.py
          mpirun -n 3 python3 component_bc.py
          mpirun -n 3 python3 em.py
          cd ../chapter4
          mpirun -n 3 python3 solvers.py
          mpirun -n 3 python3 convergence.py
          mpirun -n 3 python3 compiler_parameters.py

      - name: Upload Navier-Stokes DFG 2D 3 plots
        uses: actions/upload-artifact@v3
        with:
          name: DFG2D-3
          path: chapter2/figures
          retention-days: 2
          if-no-files-found: error


  build-book:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: ghcr.io/jorgensd/dolfinx-tutorial:v0.5.1

    env:
      HDF5_MPI: "ON"
      CC: mpicc
      HDF5_DIR: "/usr/local/"
      DISPLAY: ":99.0"
      PYVISTA_OFF_SCREEN: false
      PYVISTA_JUPYTER_BACKEND: "static"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Build the book
        run: 
          jupyter-book build  -W .

      - name: Upload Jupyter-book artifact
        uses: actions/upload-artifact@v3
        with:
          name: book
          path: _build/html/
          retention-days: 2
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/dokken/jupyterbook'
    needs: [build-book]
    steps:

      - name: Download Jupyter-book
        uses: actions/download-artifact@v3
        with:
          name: book
          path: _html
      
      - name: Push book to HTML to github pages
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _html
